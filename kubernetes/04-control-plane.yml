---
- hosts: control_plane
  become: true

  tasks:
    - name: Pulling images required for setting up a Kubernetes cluster
      shell: kubeadm config images pull

    - name: Download runc binary
      ansible.builtin.get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.1.12/runc.amd64
        dest: /tmp/runc.amd64
        mode: '0755'

    - name: Install runc binary
      ansible.builtin.command:
        cmd: install -m 755 /tmp/runc.amd64 /usr/local/sbin/runc

    - name: Get the IP address of the control plane node
      shell: ip a | grep enp1s0 | grep 'inet ' | awk '{print $2}' | cut -f1 -d'/'
      register: control_plane_ip

#    - name: Initializing Kubernetes cluster
#      shell: kubeadm init --apiserver-advertise-address=$(ip a |grep enp1s0|  grep 'inet ' | awk '{print $2}' | cut -f1 -d'/') --pod-network-cidr 10.244.0.0/16 --control-plane-endpoint "" --v=5
#      register: myshell_output

    - debug: msg="{{ control_plane_ip.stdout }}"

    - name: Run kubeadm init with control plane endpoint
      shell: |
        kubeadm init \
        --apiserver-advertise-address={{ control_plane_ip.stdout }} \
        --pod-network-cidr=10.244.0.0/16 \
        --control-plane-endpoint={{ control_plane_ip.stdout }} \
        --v=5
      args:
        executable: /bin/bash
      register: myshell_output

    - debug: msg="{{ myshell_output.stdout }}"

    - name: Create .kube directory
      become: true
      become_user: admin
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/admin/.kube/config
        remote_src: yes
        owner: admin

- hosts: control_plane
  tasks:

    - name: Check if Kubernetes cluster is running
      command: kubectl cluster-info
      register: cluster_info
      ignore_errors: true

    - name: Print cluster status
      debug:
        var: cluster_info

    - name: Install Pod Network
      shell: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
      register: pod_network_output

    - name: Ensure Pod Network created successfully
      debug:
        msg: "{{ pod_network_output.stdout }}"

#    - name: Create Calico Operator using kubectl
#      shell: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/tigera-operator.yaml --validate=false
#      register: tigera_operator_output
#
#    - name: Download Calico Custom Resources manifest
#      ansible.builtin.get_url:
#        url: https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/custom-resources.yaml
#        dest: /tmp/custom-resources.yaml
#
#    - name: Change cidr value in the custom-resources.yaml
#      ansible.builtin.replace:
#        path: /tmp/custom-resources.yaml
#        regexp: 'cidr: 192\.168\.0\.0/16'
#        replace: 'cidr: 10.244.0.0/16'
#
#    - name: Apply Custom Resources manifest using kubectl
#      shell: kubectl apply -f /tmp/custom-resources.yaml
#      register: calico_custom_resources_output
#
#    - name: Ensure Tigera Operator was created successfully
#      debug:
#        msg: "{{ tigera_operator_output.stdout }}"
#
#    - name: Ensure Calico Custom Resources applied successfully
#      debug:
#        msg: "{{ calico_custom_resources_output.stdout }}"
