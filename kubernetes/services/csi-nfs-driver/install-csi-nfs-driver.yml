---
- name: Install CSI NFS driver in Kubernetes
  hosts: jump_server
  tasks:
    - name: Add CSI NFS Helm repository
      shell: helm repo add csi-driver-nfs https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/charts
      args:
        creates: ~/.cache/helm/repository/csi-driver-nfs-index.yaml

    - name: Update Helm repository
      shell: "helm repo update"

    - name: Install/Upgrade CSI NFS Driver
      shell: |
        helm upgrade --install csi-driver-nfs2 csi-driver-nfs/csi-driver-nfs \
          --namespace kube-system \
          --set externalSnapshotter.enabled=true \
          --set externalSnapshotter.name=csi-nfs-snapshot-controller \
          --set controller.runOnControlPlane=true \
          --set controller.replicas=2 \
          --version {{ lookup('ansible.builtin.env', 'CSI_NFS_DRIVER_VERSION') }}

    - name: Verify Helm release status
      ansible.builtin.command:
        cmd: helm status csi-driver-nfs --namespace kube-system
      register: helm_status
      failed_when: "'STATUS: deployed' not in helm_status.stdout"
      retries: 30
      delay: 10
      until: helm_status is succeeded

    - name: Verify CSI NFS driver pods are running
      ansible.builtin.command:
        cmd: kubectl get pods -n kube-system -l app.kubernetes.io/name=csi-driver-nfs -o jsonpath='{.items[*].status.phase}'
      register: pod_status
      failed_when: "'Running' not in pod_status.stdout"
      retries: 5
      delay: 15
      until: pod_status.stdout.find('Running') != -1

    - name: Display successful installation message
      ansible.builtin.debug:
        msg: "CSI NFS driver installed and running successfully."

- name: Add retained and ephemeral storage classes
  hosts: jump_server
  tasks:

    - name: Create a directory for YAML files
      ansible.builtin.file:
        path: /tmp/k8s-manifests
        state: directory

    - name: Template NFS storage class YAML
      ansible.builtin.template:
        src: nfs-storage-class.yml.j2
        dest: /tmp/k8s-manifests/nfs-storage-class.yml
        mode: '0644'
      vars:
        nfs_server: "{{ lookup('ansible.builtin.env', 'NFS_SERVER_IP') }}"
        nfs_ephemeral_share: "{{ lookup('ansible.builtin.env', 'NFS_EPHEMERAL_SHARE_PATH') }}"
        nfs_retained_share: "{{ lookup('ansible.builtin.env', 'NFS_RETAINED_SHARE_PATH') }}"

    - name: Verify that the file was copied
      ansible.builtin.stat:
        path: /tmp/k8s-manifests/nfs-storage-class.yml
      register: storage_class_file

    - name: Apply the storage class manifest using kubectl
      ansible.builtin.command:
        cmd: kubectl apply -f /tmp/k8s-manifests/nfs-storage-class.yml
      register: apply_output

    - name: Display storage class creation result
      ansible.builtin.debug:
        msg: "{{ apply_output.stdout }}"
