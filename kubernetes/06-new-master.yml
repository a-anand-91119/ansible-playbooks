---
- hosts: control_plane
  become: true
  tasks:

    - name: Get the token for joining the new master node with the Kubernetes control plane.
      shell: kubeadm token create --print-join-command --certificate-key $(kubeadm init phase upload-certs --upload-certs)
      register: kubernetes_master_join_command

    - debug:
        msg: "{{ kubernetes_master_join_command.stdout_lines }}"

    - name: Copy the K8s Join command for new master node to file on master
      copy:
        content: "{{ kubernetes_master_join_command.stdout_lines[0] }}"
        dest: "/tmp/kubernetes_master_join_command"

    - name: Copy join command from master to local Ansible server
      fetch:
        src: "/tmp/kubernetes_master_join_command"
        dest: "/tmp/kubernetes_master_join_command"
        flat: yes

    - name: Copy the required certs from the existing master
      fetch:
        src: /etc/kubernetes/pki/ca.crt
        dest: /tmp/ca.crt
        flat: yes

- hosts: new_master
  become: true
  tasks:

    - name: Reset kubeadm on the new master node (if necessary)
      shell: kubeadm reset -f
      ignore_errors: true

    - name: Copy the K8s join command to the new master node
      copy:
        src: /tmp/kubernetes_master_join_command
        dest: /tmp/kubernetes_master_join_command
        mode: 0777

    - name: Copy CA certificate to the new master node
      copy:
        src: /tmp/ca.crt
        dest: /etc/kubernetes/pki/ca.crt
        mode: 0644

    - name: Join the new master node to the control plane
      command: sh /tmp/kubernetes_master_join_command
      register: master_joined

    - debug:
        msg: "{{ master_joined.stdout }}"
