---
- name: Get kubernetes config from control plane node
  hosts: control_plane
  tasks:
    - name: Copy kube config file from control_plane to local Ansible server
      ansible.builtin.fetch:
        src: /home/admin/.kube/config
        dest: /tmp/kube_config
        flat: true

- name: Install packages for network debugging
  hosts: jump_server
  become: true
  tasks:
    - name: Update apt and install required system packages
      ansible.builtin.apt:
        pkg:
          - traceroute
          - nmap
          - fping
          - arp-scan
          - net-tools
        state: present
        update_cache: true

- name: Setup kube config in jump server
  hosts: jump_server
  tasks:
    - name: Allow Kubernetes control plane ports in UFW
      become: true
      ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
        comment: "{{ item.comment }}"
      with_items:
        - { port: 3000, proto: tcp, comment: Semaphore UI Port }

    - name: Create .kube directory
      become: true
      become_user: admin
      ansible.builtin.file:
        path: $HOME/.kube
        state: directory
        mode: "0755"

    - name: Copy the kube config to the jump server
      ansible.builtin.copy:
        src: /tmp/kube_config
        dest: $HOME/.kube/config
        mode: "0600"

- name: Install Helm
  hosts: jump_server

  tasks:
    - name: Download the Helm install script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/get_helm.sh
        mode: "0700"

    - name: Run the Helm install script
      ansible.builtin.command: bash /tmp/get_helm.sh
      changed_when: false

    - name: Verify Helm installation
      ansible.builtin.command: helm version
      register: helm_version_output
      changed_when: false

- name: Install and setup Kubeseal
  hosts: jump_server

  vars:
    kubeseal_version: "{{ lookup('ansible.builtin.env', 'KUBESEAL_VERSION') }}"

  tasks:
    - name: Download kubeseal
      ansible.builtin.get_url:
        url: "https://github.com/bitnami-labs/sealed-secrets/releases/download/v{{ kubeseal_version }}/kubeseal-{{ kubeseal_version }}-linux-amd64.tar.gz"
        dest: "/tmp/kubeseal-{{ kubeseal_version }}-linux-amd64.tar.gz"
        mode: "0644"

    - name: Create temporary directory for extraction
      ansible.builtin.file:
        path: /tmp/kubeseal-extract
        state: directory
        mode: "0755"

    - name: Extract kubeseal binary
      ansible.builtin.unarchive:
        src: "/tmp/kubeseal-{{ kubeseal_version }}-linux-amd64.tar.gz"
        dest: /tmp/kubeseal-extract
        remote_src: true

    - name: Install kubeseal binary
      become: true
      ansible.builtin.command: install -m 755 /tmp/kubeseal-extract/kubeseal /usr/local/bin/kubeseal
      changed_when: false

    - name: Clean up temporary files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/tmp/kubeseal-{{ kubeseal_version }}-linux-amd64.tar.gz"
        - "/tmp/kubeseal-extract"
