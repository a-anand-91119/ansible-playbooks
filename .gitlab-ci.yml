stages:
  - lint
  - fix

variables:
  ANSIBLE_VERSION: $ANSIBLE_VERSION

ansible-lint:
  stage: lint
  image: registry.gitlab.com/pipeline-components/ansible-lint:latest
  allow_failure: true
  script:
    - ansible-lint --force-color
  only:
    - merge_requests
    - branches

ansible-lint-2:
  stage: lint
  image: registry.gitlab.com/pipeline-components/ansible-lint:latest
  artifacts:
    when: always
    reports:
      junit: ansible-lint.xml
  script:
    - ansible-lint -f md --force-color
  only:
    - merge_requests
    - branches
  allow_failure: true

ansible-lint-3:
  stage: lint
  image: registry.gitlab.com/pipeline-components/ansible-lint:latest
  allow_failure: true
  script:
    - ansible-lint -f codeclimate | python -m json.tool | tee "${CI_PROJECT_DIR}/codeclimate-results.json"
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      codequality:
        - "${CI_PROJECT_DIR}/codeclimate-results.json"
    paths:
      - "${CI_PROJECT_DIR}/codeclimate-results.json"
  only:
    - merge_requests
    - branches

fix-playbooks:
  stage: fix
  image: registry.gitlab.com/pipeline-components/ansible-lint:latest
  allow_failure: true
  script:
    - echo -e "Running ansible lint-fixes..."
    - ansible-lint --fix
    - echo -e "Commit changes if any fixes were applied..."
    - git config --global user.email "$GIT_EMAIL"
    - git config --global user.name "$GIT_NAME"
    - git diff --quiet || git commit -am "Auto-fixed playbook issues"
    - git push origin $CI_COMMIT_REF_NAME
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    reports:
      codequality:
        - "${CI_PROJECT_DIR}/codeclimate-results.json"
    paths:
      - "${CI_PROJECT_DIR}/codeclimate-results.json"
  only:
    - merge_requests
  when: manual
