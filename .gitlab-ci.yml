stages:
  - lint
  - fix

variables:
  ANSIBLE_VERSION: $ANSIBLE_VERSION

lint-playbooks:
  image: "cytopia/ansible-lint:latest"
  stage: lint
  script:
    - echo "Finding and linting Ansible playbooks..."
    - |
      find . -name "*.yml" -o -name "*.yaml" | while read -r file; do
        if grep -qE '^( *hosts:| *tasks:)' "$file"; then
          echo "Linting $file...\n"
          ansible-lint "$file" --force-color --profile=min --strict || exit 1
          echo "\n"
        else
          echo "Skipping non-ansible file: $file \n"
        fi
      done
  only:
    - merge_requests
    - branches

fix-playbooks:
  image: "cytopia/ansible-lint:latest"
  stage: fix
  script:
    - echo "Automatically fixing Ansible playbooks..."
    - |
      find . -name "*.yml" -o -name "*.yaml" | while read -r file; do
        if grep -qE '^( *hosts:| *tasks:)' "$file"; then
          echo "Fixing $file...\n"
          ansible-lint --fix "$file" --force-color || exit 1
          echo "\n"
        else
          echo "Skipping non-ansible file: $file \n"
        fi
      done
    - echo "Commit changes if any fixes were applied..."
    - git config --global user.email "$GIT_EMAIL"
    - git config --global user.name "$GIT_NAME"
    - git diff --quiet || git commit -am "Auto-fixed playbook issues"
#    - git push origin $CI_COMMIT_REF_NAME
  only:
    - merge_requests
  when: manual
