---
- hosts: all
  become: true

  tasks:
    - name: Create a empty file for containerd module.
      copy:
        content: ""
        dest: /etc/modules-load.d/containerd.conf
        force: no

    - name: Configure module for containerd.
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter

    - name: Load the overlay module
      command: modprobe overlay
      args:
        warn: false

    - name: Load the br_netfilter module
      command: modprobe br_netfilter
      args:
        warn: false

    - name: Verify that the overlay module is loaded
      shell: lsmod | grep overlay
      register: overlay_module
      changed_when: false

    - name: Verify that the br_netfilter module is loaded
      shell: lsmod | grep br_netfilter
      register: br_netfilter_module
      changed_when: false

    - name: Print overlay module load status
      debug:
        msg: "Overlay module loaded: {{ overlay_module.stdout }}"

    - name: Print br_netfilter module load status
      debug:
        msg: "br_netfilter module loaded: {{ br_netfilter_module.stdout }}"

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        filename: docker
        state: present
        update_cache: yes

    #    - name: Add Docker Repository
    #      apt_repository:
    #        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    #        state: present
    #        filename: docker
    #        update_cache: yes

    - name: "Update cache & Full system update"
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600
        force_apt_get: true

    - name: Install containerd.
      apt:
        name:
          - containerd.io
        state: present

    - name: Configure containerd.
      file:
        path: /etc/containerd
        state: directory

    - name: Generate the default containerd configuration
      shell: |
        containerd config default | tee /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Enable containerd service, and start it.
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: Verify containerd service is running
      systemd:
        name: containerd
        state: started
        enabled: yes
